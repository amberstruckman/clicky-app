{"version":3,"sources":["photos/Bulbasaur_Pokemon.png","photos/Charmander_Pokemon.png","photos/Eevee_Pokemon.png","photos/Fins_Pokemon.png","photos/Jigglypuff_Pokemon.png","photos/Kirlia_Pokemon.png","photos/Marill_Pokemon.png","photos/Pachirisu_Pokemon.png","photos/Pidgey_Pokemon.png","photos/Pika_Pokemon.png","photos/Piplup_Pokemon.png","photos/Spike_Pokemon.png","Header.js","Container.js","PhotoGrid.js","Footer.js","Pokemon.js","PokemonClickyApp.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Masthead","props","react_default","a","createElement","className","href","score","topScore","Container","children","PhotoGrid","key","name","index","onClick","handleClick","id","concat","shake","aria-label","src","image","alt","Footer","class","images","require","clicked","PokemonClickyApp","state","data","pokemonData","correctGuess","newData","_this$state","_this","newScore","newTopScore","Math","max","setState","mixPokemon","wrongGuess","resetPokemon","resetData","map","item","Object","objectSpread","i","length","j","floor","random","temp","handleItemClick","guessedCorrectly","newItem","this","_this2","Header","src_Container","src_PhotoGrid","src_Footer","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_PokemonClickyApp","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.53b702e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bulbasaur_Pokemon.4e762991.png\";","module.exports = __webpack_public_path__ + \"static/media/Charmander_Pokemon.078eeb3a.png\";","module.exports = __webpack_public_path__ + \"static/media/Eevee_Pokemon.7a492aaf.png\";","module.exports = __webpack_public_path__ + \"static/media/Fins_Pokemon.ee84a2cf.png\";","module.exports = __webpack_public_path__ + \"static/media/Jigglypuff_Pokemon.651d25da.png\";","module.exports = __webpack_public_path__ + \"static/media/Kirlia_Pokemon.bce1cb86.png\";","module.exports = __webpack_public_path__ + \"static/media/Marill_Pokemon.a6456fc5.png\";","module.exports = __webpack_public_path__ + \"static/media/Pachirisu_Pokemon.27867d7d.png\";","module.exports = __webpack_public_path__ + \"static/media/Pidgey_Pokemon.f027ab7b.png\";","module.exports = __webpack_public_path__ + \"static/media/Pika_Pokemon.f12b69cf.png\";","module.exports = __webpack_public_path__ + \"static/media/Piplup_Pokemon.76415f22.png\";","module.exports = __webpack_public_path__ + \"static/media/Spike_Pokemon.74123a5f.png\";","import React from \"react\";\r\n\r\nfunction Masthead(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        <h1>Clicky Game!</h1>\r\n        <p> Click a picture to get started!</p>\r\n        <p className=\"score\">Score: <em>{props.score}</em></p>\r\n        <p className=\"score\">Top Score: <strong>{props.topScore}</strong></p>\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Masthead;\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <main className=\"container\">{props.children}</main>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\nfunction PhotoGrid(props) {\r\n    return (\r\n      <div key={props.name + props.index} \r\n        onClick={() => props.handleClick(props.id)}\r\n        className={`click-item${props.shake ? \" shake\" : \"\"}`}>\r\n             {/* <h1>{props.name}</h1> */}\r\n             <img aria-label=\"click item\" \r\n             src={props.image} \r\n             alt={`Click on ${props.name}`} />\r\n             \r\n         </div>\r\n    );\r\n  }\r\n  \r\n  export default PhotoGrid;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div class=\"card-footer text-muted\">\r\n    Amber Struckman\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","const images = [\r\n    {\r\n      \"id\": 1,\r\n      \"image\": require(\"./photos/Bulbasaur_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"image\": require(\"./photos/Charmander_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"image\": require(\"./photos/Eevee_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"image\": require(\"./photos/Fins_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 5,\r\n      \"image\": require(\"./photos/Jigglypuff_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 6,\r\n      \"image\": require(\"./photos/Kirlia_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 7,\r\n      \"image\": require(\"./photos/Marill_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 8,\r\n      \"image\": require(\"./photos/Pachirisu_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 9,\r\n      \"image\": require(\"./photos/Pidgey_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 10,\r\n      \"image\": require(\"./photos/Pika_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 11,\r\n      \"image\": require(\"./photos/Piplup_Pokemon.png\"),\r\n      \"clicked\": false\r\n    },\r\n    {\r\n      \"id\": 12,\r\n      \"image\": require(\"./photos/Spike_Pokemon.png\"),\r\n      \"clicked\": false\r\n    }\r\n  ]\r\n  \r\n  export default images;","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport PhotoGrid from \"./PhotoGrid\";\r\nimport Footer from \"./Footer\";\r\nimport pokemonData from \"./Pokemon\";\r\n\r\nclass PokemonClickyApp extends Component {\r\n  state = {\r\n    data: pokemonData,\r\n    score: 0,\r\n    topScore: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: this.mixPokemon(this.state.data) });\r\n  }\r\n\r\n  correctGuess = newData => {\r\n    const { topScore, score } = this.state;\r\n    const newScore = score + 1;\r\n    const newTopScore = Math.max(newScore, topScore);\r\n\r\n    this.setState({\r\n      data: this.mixPokemon(newData),\r\n      score: newScore,\r\n      topScore: newTopScore\r\n    });\r\n  };\r\n\r\n  wrongGuess = data => {\r\n    this.setState({\r\n      data: this.resetPokemon(data),\r\n      score: 0\r\n    });\r\n  };\r\n\r\n  resetPokemon = data => {\r\n    const resetData = data.map(item => ({ ...item, clicked: false }));\r\n    return this.mixPokemon(resetData);\r\n  };\r\n\r\n  mixPokemon = data => {\r\n    let i = data.length - 1;\r\n    while (i > 0) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = data[i];\r\n      data[i] = data[j];\r\n      data[j] = temp;\r\n      i--;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  handleItemClick = id => {\r\n    let guessedCorrectly = false;\r\n    const newData = this.state.data.map(item => {\r\n      const newItem = { ...item };\r\n      if (newItem.id === id) {\r\n        if (!newItem.clicked) {\r\n          newItem.clicked = true;\r\n          guessedCorrectly = true;\r\n        }\r\n      }\r\n      return newItem;\r\n    });\r\n    guessedCorrectly\r\n      ? this.correctGuess(newData)\r\n      : this.wrongGuess(newData);\r\n  };\r\n\r\n  render() {\r\n    let index = 0;\r\n    return (\r\n      <div>\r\n        <Header score={this.state.score} topScore={this.state.topScore} />\r\n        \r\n        <Container>\r\n          {this.state.data.map(item => (\r\n            <PhotoGrid\r\n              key={item.id}\r\n              id={item.id}\r\n              shake={!this.state.score && this.state.topScore}\r\n              handleClick={this.handleItemClick}\r\n              image={item.image}\r\n              index={index++}\r\n            />\r\n          ))}\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonClickyApp;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PokemonClickyApp from \"./PokemonClickyApp\";\nimport \"./pokestyle.css\";\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nReactDOM.render(<PokemonClickyApp />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}